;(function () {
    'use strict';
    angular.module('blockheads.contract').factory('contractService',
        function ($resource, $window, $q) {
            var agentOfferSolidity="contract AgentOffer {    address owner;	string name;    string description;    string offerType;    uint amount;    uint maxPayout;    string term;    string frequency;    function AgentOffer(string name, string description, string offerType, uint amount, uint maxPayout, string term, string frequency) {        name = name;        description = description;        offerType = offerType;        amount = amount;        maxPayout = maxPayout;        term = term;        frequency = frequency;        owner = msg.sender;    }	function setOwner(address owner) {		owner = owner;	}	function getOwner() constant returns (address retVal) {		return owner;	}	function setName(string name) {        name = name;    }    function getName() constant returns (string name) {        return name;    }    function setDescription(string description) {        description = description;    }    function getDescription() constant returns (string description) {        return description;    }    function setOfferType(string offerType) {        offerType = offerType;    }    function getOfferType() constant returns (string offerType) {        return offerType;    }    function setAmount(uint amount) {        amount = amount;    }    function getAmount() constant returns (uint amount) {        return amount;    }    function setMaxPayout(uint maxPayout) {        maxPayout = maxPayout;    }    function getMaxPayout() constant returns (uint maxPayout) {        return maxPayout;    }    function setTerm(string term) {        term = term;    }    function getTerm() constant returns (string term) {        return term;    }    function setFrequency(string frequency) {        frequency = frequency;    }    function getFrequency() constant returns (string frequency) {        return frequency;    }}";
            var cacheOfCompiledContracts = {agentOfferDetails: [
                [{"constant":true,"inputs":[],"name":"getFrequency","outputs":[{"name":"frequency","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"term","type":"string"}],"name":"setTerm","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getTerm","outputs":[{"name":"term","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"owner","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getName","outputs":[{"name":"name","type":"string"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getDescription","outputs":[{"name":"description","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"setAmount","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getMaxPayout","outputs":[{"name":"maxPayout","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"maxPayout","type":"uint256"}],"name":"setMaxPayout","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"name":"retVal","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"description","type":"string"}],"name":"setDescription","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"frequency","type":"string"}],"name":"setFrequency","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getOfferType","outputs":[{"name":"offerType","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"}],"name":"setName","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getAmount","outputs":[{"name":"amount","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"offerType","type":"string"}],"name":"setOfferType","outputs":[],"payable":false,"type":"function"},{"inputs":[{"name":"name","type":"string"},{"name":"description","type":"string"},{"name":"offerType","type":"string"},{"name":"amount","type":"uint256"},{"name":"maxPayout","type":"uint256"},{"name":"term","type":"string"},{"name":"frequency","type":"string"}],"type":"constructor"}],
                '60606040526040516107fd3803806107fd833981016040528080518201919060200180518201919060200180518201919060200180519060200190919080519060200190919080518201919060200180518201919060200150505b869650865085955085508494508450839350835082925082508191508150809050805033600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b5050505050505061073f806100be6000396000f3606060405236156100e2576000357c0100000000000000000000000000000000000000000000000000000000900480630a42f86f146100e75780630c76f69d14610167578063124b65b4146101c257806313af40351461024257806317d7de7c1461025f5780631a092541146102df578063271f88b41461035f5780632d9a37d31461037c57806356b4997f146103a4578063893d20e8146103c157806390c3f38f146103ff5780639c16b8fd1461045a578063af5372e6146104b5578063c47f002714610535578063d321fe2914610590578063d4f62f56146105b8576100e2565b610002565b34610002576100f96004805050610613565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34610002576101c06004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091905050610632565b005b34610002576101d4600480505061063b565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156102345780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b346100025761025d600480803590602001909190505061065a565b005b34610002576102716004805050610663565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156102d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34610002576102f16004805050610682565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156103515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b346100025761037a60048080359060200190919050506106a1565b005b346100025761038e60048050506106aa565b6040518082815260200191505060405180910390f35b34610002576103bf60048080359060200190919050506106b7565b005b34610002576103d360048050506106c0565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34610002576104586004808035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509090919050506106ef565b005b34610002576104b36004808035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509090919050506106f8565b005b34610002576104c76004805050610701565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156105275780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b346100025761058e6004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091905050610720565b005b34610002576105a26004805050610729565b6040518082815260200191505060405180910390f35b34610002576106116004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091905050610736565b005b602060405190810160405280600081526020015080905061062f565b90565b80905080505b50565b6020604051908101604052806000815260200150809050610657565b90565b80905080505b50565b602060405190810160405280600081526020015080905061067f565b90565b602060405190810160405280600081526020015080905061069e565b90565b80905080505b50565b60008090506106b4565b90565b80905080505b50565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506106ec565b90565b80905080505b50565b80905080505b50565b602060405190810160405280600081526020015080905061071d565b90565b80905080505b50565b6000809050610733565b90565b80905080505b5056'
            ]};

            function createAgentOffer(contract, callback){
                var agentOfferContract = web3.eth.contract(cacheOfCompiledContracts.agentOfferDetails[0]);

                var createTransaction = agentOfferContract.new(contract.name, contract.description, contract.type,
                    contract.amount, contract.maxPayout, contract.term, contract.frequency, {
                    data: cacheOfCompiledContracts.agentOfferDetails[1],
                    gas: 3000000,
                    from: web3.eth.accounts[0].address}, callback);
                        //'0x2465d5dc46ed5e7cf42ff430579a9dc6fa74aa85'}, callback);

            }

            function updateAgentOffer(insuranceApp) {
                if (insuranceApp.id) { // update existing insurance app
                    // var transaction = new Transaction({status:insuranceApp.status,faceAmount:insuranceApp.premium
                    //
                    // Date dateCreated
                    // Date lastUpdated)

                } else { // new insurance app

                }

            }

            function getAgentOffer(address) {

            }

            var service = {
                createAgentOffer: createAgentOffer,
                updateAgentOffer: updateAgentOffer,
                getAgentOffer: getAgentOffer
            };

            return service;
        });
})();
